{"version":3,"sources":["../../src/index.js","App.js","reportWebVitals.js","index.js"],"names":["require","map","draw","measurement","length","area","addToolStyle","defaultStyle","id","type","filter","layout","paint","extendDrawBar","opt","this","onRemoveOrig","onRemove","options","union","copy","buffer","initialOptions","buttons","name","callback","unionPolygons","title","classes","classPrefix","bufferFeature","copyFeature","cutFeature","lengthOfFeature","areaOfPolygon","_container","document","createElement","className","elContainer","button","toLowerCase","forEach","b","addButton","removeButton","elButton","setAttribute","Array","c","classList","add","addEventListener","bind","appendChild","removeEventListener","action","remove","selectedFeatures","getSelected","features","unionPoly","Union","err","Error","geometry","ids","i","delete","join","fireCreateUnion","changeMode","featureIds","bufferOptions","units","bufferUnits","steps","bufferSteps","buffers","main","buffered","Buffer","bufferSize","Math","floor","random","push","fireCreateBuffer","translated","translatedPoly","transformTranslate","fireUpdateCopy","cuts","cutPoly","fireUpdateCut","idx","Length","lengthUnits","value","showLength","setFeatureProperty","parseFloat","toFixed","fireUpdateMeasurement","Area","showArea","newF","fire","events","CREATE","UPDATE","App","mapboxGl","getRTLTextPluginStatus","setRTLTextPlugin","console","error","mapRef","useRef","useState","addTool","setAddTool","useEffect","Map","container","current","style","center","zoom","pitch","interactive","hash","attributionControl","customAttribution","transformRequest","url","headers","MapboxDraw","modes","styles","bufferUnit","userProperties","once","resize","addControl","additionalTools","set","properties","coordinates","on","e","log","querySelector","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a63a977f.chunk.js","sourcesContent":["import Union from '@turf/union';\nimport Buffer from '@turf/buffer';\nimport Length from '@turf/length';\nimport Area from '@turf/area';\nimport transformTranslate from '@turf/transform-translate';\nimport defaultStyle from '@mapbox/mapbox-gl-draw/src/lib/theme';\n\nrequire('./index.css');\n\nlet measurement = {\n    length: [],\n    area: [],\n};\n\nconst addToolStyle = [\n    ...defaultStyle,\n    {\n        id: 'gl-draw-line-active-length',\n        type: 'symbol',\n        filter: ['all', ['==', '$type', 'LineString'], ['==', 'active', 'true'], ['==', 'user_has_length', 'true']],\n        layout: {\n            'symbol-placement': 'line-center',\n            'text-rotation-alignment': 'map',\n            'text-pitch-alignment': 'viewport',\n            'text-max-angle': 30,\n            'text-max-width': 300,\n            'text-field': '{user_length} {user_length_unit}',\n            'text-font': ['IranSans-Noto'],\n            'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 10, 12, 16, 16],\n            'text-allow-overlap': false,\n        },\n        paint: {\n            'text-opacity': ['interpolate', ['linear'], ['zoom'], 8, 1],\n            'text-color': '#000',\n            'text-halo-color': ['interpolate', ['linear'], ['zoom'], 2, '#ffffff', 3, '#ffffff'],\n            'text-halo-width': 0.3,\n            'text-halo-blur': 1,\n        },\n    },\n    {\n        id: 'gl-draw-polygon-active-length',\n        type: 'symbol',\n        filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'true'], ['==', 'user_has_length', 'true']],\n        layout: {\n            'symbol-placement': 'line-center',\n            'text-rotation-alignment': 'map',\n            'text-pitch-alignment': 'viewport',\n            'text-max-angle': 30,\n            'text-max-width': 300,\n            'text-field': '{user_length} {user_length_unit}',\n            'text-font': ['IranSans-Noto'],\n            'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 10, 12, 16, 16],\n            'text-allow-overlap': false,\n        },\n        paint: {\n            'text-opacity': ['interpolate', ['linear'], ['zoom'], 8, 1],\n            'text-color': '#000',\n            'text-halo-color': ['interpolate', ['linear'], ['zoom'], 2, '#ffffff', 3, '#ffffff'],\n            'text-halo-width': 0.3,\n            'text-halo-blur': 1,\n        },\n    },\n    {\n        id: 'gl-draw-polygon-active-area',\n        type: 'symbol',\n        filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'true'], ['==', 'user_has_area', 'true']],\n        layout: {\n            'symbol-placement': 'line',\n            'text-rotation-alignment': 'map',\n            'text-pitch-alignment': 'viewport',\n            'text-max-angle': 30,\n            'text-max-width': 300,\n            'text-field': '{user_area} meters^2',\n            'text-font': ['IranSans-Noto'],\n            'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 10, 12, 16, 16],\n            'text-allow-overlap': false,\n        },\n        paint: {\n            'text-opacity': ['interpolate', ['linear'], ['zoom'], 8, 1],\n            'text-color': '#000',\n            'text-halo-color': ['interpolate', ['linear'], ['zoom'], 2, '#ffffff', 3, '#ffffff'],\n            'text-halo-width': 0.3,\n            'text-halo-blur': 1,\n        },\n    },\n];\nclass extendDrawBar {\n    constructor(opt) {\n        this.draw = opt.draw;\n        this.onRemoveOrig = opt.draw.onRemove;\n        const { union, copy, buffer, length, area } = this.draw.options;\n        this.initialOptions = { union, copy, buffer, length, area };\n\n        this.buttons = [\n            {\n                name: 'Union',\n                callback: this.unionPolygons,\n                title: `Union tool`,\n                classes: ['mapbox-gl-draw_union', opt.classPrefix ? `${opt.classPrefix}-union` : null],\n            },\n            {\n                name: 'Buffer',\n                callback: this.bufferFeature,\n                title: `Buffer tool`,\n                classes: ['mapbox-gl-draw_buffer', opt.classPrefix ? `${opt.classPrefix}-buffer` : null],\n            },\n            {\n                name: 'Copy',\n                callback: this.copyFeature,\n                title: `Copy tool`,\n                classes: ['mapbox-gl-draw_copy', opt.classPrefix ? `${opt.classPrefix}-copy` : null],\n            },\n            {\n                name: 'Cut',\n                callback: this.cutFeature,\n                title: `Cut tool`,\n                classes: ['mapbox-gl-draw_cut', opt.classPrefix ? `${opt.classPrefix}-cut` : null],\n            },\n            {\n                name: 'Length',\n                callback: this.lengthOfFeature,\n                title: `Length tool`,\n                classes: ['mapbox-gl-draw_length', opt.classPrefix ? `${opt.classPrefix}-length` : null],\n            },\n            {\n                name: 'Area',\n                callback: this.areaOfPolygon,\n                title: `Area tool`,\n                classes: ['mapbox-gl-draw_area', opt.classPrefix ? `${opt.classPrefix}-area` : null],\n            },\n        ];\n    }\n\n    onAdd(map) {\n        this.map = map;\n        this._container = document.createElement('div');\n        this._container.className = 'mapboxgl-ctrl-group mapboxgl-ctrl';\n        this.elContainer = this._container;\n        this.buttons\n            .filter((button) => this.initialOptions[button.name.toLowerCase()] !== false)\n            .forEach((b) => {\n                this.addButton(b);\n            });\n        return this._container;\n    }\n    onRemove(map) {\n        this.buttons\n            .filter((button) => this.initialOptions[button.name.toLowerCase()] !== false)\n            .forEach((b) => {\n                this.removeButton(b);\n            });\n        this.onRemoveOrig(map);\n    }\n\n    addButton(opt) {\n        var elButton = document.createElement('button');\n        elButton.className = 'mapbox-gl-draw_ctrl-draw-btn';\n        elButton.setAttribute('title', opt.title);\n        if (opt.classes instanceof Array) {\n            opt.classes.forEach((c) => {\n                elButton.classList.add(c);\n            });\n        }\n        elButton.addEventListener('click', opt.callback.bind(this));\n        this.elContainer.appendChild(elButton);\n        opt.elButton = elButton;\n    }\n\n    removeButton(opt) {\n        opt.elButton.removeEventListener('click', opt.action);\n        opt.elButton.remove();\n    }\n\n    unionPolygons() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let unionPoly;\n        try {\n            unionPoly = Union(...this.draw.getSelected().features);\n        } catch (err) {\n            throw new Error(err);\n        }\n        if (unionPoly.geometry.type === 'GeometryCollection')\n            throw new Error('Selected Features must have the same types!');\n        let ids = selectedFeatures.map((i) => i.id);\n        this.draw.delete(ids);\n        unionPoly.id = ids.join('-');\n        this.draw.add(unionPoly);\n        this.fireCreateUnion(unionPoly)\n        this.draw.changeMode('simple_select', { featureIds: [unionPoly.id] });\n    }\n\n    bufferFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        const bufferOptions = {};\n        bufferOptions.units = this.draw.options.bufferUnits || 'kilometers';\n        bufferOptions.steps = this.draw.options.bufferSteps || '64';\n        let ids = [];\n        let buffers = [];\n        selectedFeatures.forEach((main) => {\n            let buffered = Buffer(main, this.draw.options.bufferSize || 0.5, bufferOptions);\n            buffered.id = `${main.id}_buffer_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(buffered.id);\n            buffers.push(buffered)\n            this.draw.add(buffered);\n        });\n        fireCreateBuffer(buffers)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    copyFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        let translated = [];\n        selectedFeatures.forEach((main) => {\n            var translatedPoly = transformTranslate(main, 2, 35);\n            translatedPoly.id = `${main.id}_copy_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(translatedPoly.id);\n            translated.push(translatedPoly);\n            // this.draw.add(translatedPoly);\n        });\n        fireUpdateCopy(translated)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    cutFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        let cuts = [];\n        selectedFeatures.forEach((main) => {\n            // var translatedPoly = transformTranslate(main, 2, 35);\n            cutPoly.id = `${main.id}_cut_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(cutPoly.id);\n            cuts.push(cutPoly);\n            // this.draw.add(translatedPoly);\n        });\n        fireUpdateCut(cuts)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    lengthOfFeature() {\n        measurement.length = [];\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        selectedFeatures.forEach((main, idx) => {\n            let length = Length(main, { units: this.draw.options.lengthUnits || 'kilometers' });\n            measurement.length.push({ id: main.id, value: length });\n            (this.draw.options.showLength || true) &&\n                this.draw.setFeatureProperty(main.id, 'has_length', 'true') &&\n                this.draw.setFeatureProperty(main.id, 'length', parseFloat(length).toFixed(4)) &&\n                this.draw.setFeatureProperty(main.id, 'length_unit', this.draw.options.lengthUnits || 'kilometers');\n        });\n        fireUpdateMeasurement(measurement.length)\n    }\n    areaOfPolygon() {\n        measurement.area = [];\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        selectedFeatures.forEach((main, idx) => {\n            let area = Area(main);\n            measurement.area.push({ id: main.id, value: area });\n            (this.draw.options.showArea || true) &&\n                this.draw.setFeatureProperty(main.id, 'has_area', 'true') &&\n                this.draw.setFeatureProperty(main.id, 'area', parseFloat(area).toFixed(4));\n        });\n        fireUpdateMeasurement(measurement.area\n            )\n    }\n\n    fireCreateUnion(newF) {\n        this.map.fire(events.CREATE, {\n          action: 'UnionPolygon',\n          features: newF\n        });\n    }\n    fireCreateBuffer(newF) {\n        this.map.fire(events.CREATE, {\n          action: 'Buffer',\n          features: newF\n        });\n    }\n    fireUpdateCopy(newF) {\n        this.map.fire(events.UPDATE, {\n          action: 'Copy',\n          features: newF\n        });\n    }\n    fireUpdateCut(newF) {\n        this.map.fire(events.UPDATE, {\n          action: 'Cut',\n          features: newF\n        });\n    }\n    fireUpdateMeasurement(newF) {\n        this.map.fire(events.UPDATE, {\n          action: 'Measurement',\n          features: newF\n        });\n    }\n}\n\n/*\noptions\n------\n\n\n{\n    union: true,\n    copy: true,\n    buffer: true,\n    length: true,\n    area: true,\n    bufferSize: 500,\n    bufferUnit: 'kilometers',\n    bufferSteps: 64,\n    lengthUnit: 'kilometers',\n    showLength: true,\n    showArea: true\n}\n*/\nconst additionalTools = (draw, classPrefix) =>\n    new extendDrawBar({\n        draw,\n        classPrefix,\n    });\n\nexport { additionalTools, measurement, addToolStyle };\n","import React, { useRef, useEffect, useState } from 'react';\nimport mapboxGl from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport { additionalTools, measurement, addToolStyle } from 'mapbox-gl-draw-additional-tools';\nimport './App.css';\n\nlet map;\nlet draw;\n\nfunction App() {\n    if (mapboxGl.getRTLTextPluginStatus() === 'unavailable')\n        mapboxGl.setRTLTextPlugin(\n            'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\n            (err) => {\n                err && console.error(err);\n            },\n            true\n        );\n    let mapRef = useRef(null);\n    const [addTool, setAddTool] = useState();\n\n    useEffect(() => {\n        map = new mapboxGl.Map({\n            container: mapRef.current || '',\n            style: `https://map.ir/vector/styles/main/mapir-xyz-light-style.json`,\n            center: [51.3857, 35.6102],\n            zoom: 10,\n            pitch: 0,\n            interactive: true,\n            hash: true,\n            attributionControl: true,\n            customAttribution: '© Map © Openstreetmap',\n            transformRequest: (url) => {\n                return {\n                    url: url,\n                    headers: {\n                        'x-api-key':\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRiZWU0YWU4OTk4OTA3MmQ3OTFmMjQ4ZDE5N2VhZTgwZWU2NTUyYjhlYjczOWI2NDdlY2YyYzIzNWRiYThiMzIzOTM5MDkzZDM0NTY2MmU3In0.eyJhdWQiOiI5NDMyIiwianRpIjoiZGJlZTRhZTg5OTg5MDcyZDc5MWYyNDhkMTk3ZWFlODBlZTY1NTJiOGViNzM5YjY0N2VjZjJjMjM1ZGJhOGIzMjM5MzkwOTNkMzQ1NjYyZTciLCJpYXQiOjE1OTA4MjU0NzIsIm5iZiI6MTU5MDgyNTQ3MiwiZXhwIjoxNTkzNDE3NDcyLCJzdWIiOiIiLCJzY29wZXMiOlsiYmFzaWMiXX0.M_z4xJlJRuYrh8RFe9UrW89Y_XBzpPth4yk3hlT-goBm8o3x8DGCrSqgskFfmJTUD2wC2qSoVZzQKB67sm-swtD5fkxZO7C0lBCMAU92IYZwCdYehIOtZbP5L1Lfg3C6pxd0r7gQOdzcAZj9TStnKBQPK3jSvzkiHIQhb6I0sViOS_8JceSNs9ZlVelQ3gs77xM2ksWDM6vmqIndzsS-5hUd-9qdRDTLHnhdbS4_UBwNDza47Iqd5vZkBgmQ_oDZ7dVyBuMHiQFg28V6zhtsf3fijP0UhePCj4GM89g3tzYBOmuapVBobbX395FWpnNC3bYg7zDaVHcllSUYDjGc1A', //dev api key\n                        'Mapir-SDK': 'reactjs',\n                    },\n                };\n            },\n        });\n        draw = new MapboxDraw({\n            modes: {\n                ...MapboxDraw.modes,\n            },\n            styles: addToolStyle,\n            bufferSize: 0.5, // Default is 500\n            bufferUnit: 'kilometers', //Default is kilometers. It can be miles, degrees or kilometers\n            bufferSteps: 64, // Default is 64\n            userProperties: true,\n        });\n\n        map.once('load', () => {\n            map.resize();\n            map.addControl(draw, 'top-right');\n            setAddTool(map.addControl(additionalTools(draw, 'custom-prefix'), 'top-right'));\n            draw.set({\n                type: 'FeatureCollection',\n                features: [\n                    {\n                        type: 'Feature',\n                        properties: {},\n                        id: 'example-id',\n                        geometry: {\n                            type: 'Polygon',\n                            coordinates: [\n                                [\n                                    [51.41742415918904, 35.73019558439101],\n                                    [51.31319413385742, 35.702773908694724],\n                                    [51.378997493472525, 35.665562843119986],\n                                    [51.45008537540798, 35.67776544979942],\n                                    [51.46619566741822, 35.70822028156377],\n                                    [51.41742415918904, 35.73019558439101],\n                                ],\n                            ],\n                        },\n                    },\n                ],\n            });\n            map.on('draw.create', function (e) {console.log(e)})\n            map.on('draw.update', function (e) {console.log(e)})\n        });\n    }, []);\n\n    useEffect(() => {\n        addTool &&\n            document.querySelector('.mapbox-gl-draw_length')?.addEventListener('click', () => {\n                console.log(measurement.length);\n            });\n        addTool &&\n            document.querySelector('.mapbox-gl-draw_area')?.addEventListener('click', () => {\n                console.log(measurement.area);\n            });\n    }, [addTool]);\n\n    return (\n        <div className=\"map-wrapper\">\n            <div id=\"map\" ref={mapRef} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}