{"version":3,"sources":["../../src/index.js","App.js","reportWebVitals.js","index.js"],"names":["require","map","draw","extendDrawBar","opt","this","onRemoveOrig","onRemove","options","union","copy","buffer","initialOptions","buttons","name","callback","unionPolygons","title","classes","classPrefix","bufferFeature","copyFeature","_container","document","createElement","className","elContainer","filter","button","toLowerCase","forEach","b","addButton","removeButton","elButton","setAttribute","Array","c","classList","add","addEventListener","bind","appendChild","removeEventListener","action","remove","selectedFeatures","getSelected","features","length","unionPoly","Union","err","Error","geometry","type","ids","i","id","delete","join","changeMode","featureIds","bufferOptions","units","bufferUnits","steps","bufferSteps","main","buffered","Buffer","bufferSize","Math","floor","random","push","translatedPoly","transformTranslate","App","mapboxGl","getRTLTextPluginStatus","setRTLTextPlugin","console","error","mapRef","useRef","useEffect","Map","container","current","style","center","zoom","pitch","interactive","hash","attributionControl","customAttribution","transformRequest","url","headers","MapboxDraw","modes","bufferUnit","userProperties","once","resize","addControl","additionalTools","set","properties","coordinates","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.67d6e538.chunk.js","sourcesContent":["import Union from '@turf/union';\nimport Buffer from '@turf/buffer';\nimport transformTranslate from '@turf/transform-translate';\n\nrequire('./index.css');\n\nclass extendDrawBar {\n    constructor(opt) {\n        this.draw = opt.draw;\n        this.onRemoveOrig = opt.draw.onRemove;\n        const { union, copy, buffer } = this.draw.options;\n        this.initialOptions = { union, copy, buffer };\n\n        this.buttons = [\n            {\n                name: 'Union',\n                callback: this.unionPolygons,\n                title: `Union tool`,\n                classes: ['mapbox-gl-draw_union', opt.classPrefix ? `${opt.classPrefix}-union` : null],\n            },\n            {\n                name: 'Buffer',\n                callback: this.bufferFeature,\n                title: `Buffer tool`,\n                classes: ['mapbox-gl-draw_buffer', opt.classPrefix ? `${opt.classPrefix}-buffer` : null],\n            },\n            {\n                name: 'Copy',\n                callback: this.copyFeature,\n                title: `Copy tool`,\n                classes: ['mapbox-gl-draw_copy', opt.classPrefix ? `${opt.classPrefix}-copy` : null],\n            },\n        ];\n    }\n\n    onAdd(map) {\n        this.map = map;\n        this._container = document.createElement('div');\n        this._container.className = 'mapboxgl-ctrl-group mapboxgl-ctrl';\n        this.elContainer = this._container;\n        this.buttons\n            .filter((button) => this.initialOptions[button.name.toLowerCase()] !== false)\n            .forEach((b) => {\n                this.addButton(b);\n            });\n        return this._container;\n    }\n    onRemove(map) {\n        this.buttons\n            .filter((button) => this.initialOptions[button.name.toLowerCase()] !== false)\n            .forEach((b) => {\n                this.removeButton(b);\n            });\n        this.onRemoveOrig(map);\n    }\n\n    addButton(opt) {\n        var elButton = document.createElement('button');\n        elButton.className = 'mapbox-gl-draw_ctrl-draw-btn';\n        elButton.setAttribute('title', opt.title);\n        if (opt.classes instanceof Array) {\n            opt.classes.forEach((c) => {\n                elButton.classList.add(c);\n            });\n        }\n        elButton.addEventListener('click', opt.callback.bind(this));\n        this.elContainer.appendChild(elButton);\n        opt.elButton = elButton;\n    }\n\n    removeButton(opt) {\n        opt.elButton.removeEventListener('click', opt.action);\n        opt.elButton.remove();\n    }\n\n    unionPolygons() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let unionPoly;\n        try {\n            unionPoly = Union(...this.draw.getSelected().features);\n        } catch (err) {\n            throw new Error(err);\n        }\n        if (unionPoly.geometry.type === 'GeometryCollection')\n            throw new Error('Selected Features must have the same types!');\n        let ids = selectedFeatures.map((i) => i.id);\n        this.draw.delete(ids);\n        unionPoly.id = ids.join('-');\n        this.draw.add(unionPoly);\n        this.draw.changeMode('simple_select', { featureIds: [unionPoly.id] });\n    }\n\n    bufferFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        const bufferOptions = {};\n        bufferOptions.units = this.draw.options.bufferUnits || 'kilometers';\n        bufferOptions.steps = this.draw.options.bufferSteps || '64';\n        let ids = [];\n        selectedFeatures.forEach((main) => {\n            let buffered = Buffer(main, this.draw.options.bufferSize || 0.5, bufferOptions);\n            buffered.id = `${main.id}_buffer_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(buffered.id);\n            this.draw.add(buffered);\n        });\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    copyFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        selectedFeatures.forEach((main) => {\n            var translatedPoly = transformTranslate(main, 2, 35);\n            translatedPoly.id = `${main.id}_copy_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(translatedPoly.id);\n            this.draw.add(translatedPoly);\n        });\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n}\n\n/*\noptions\n------\n\n\n{\n    union: true,\n    copy: true,\n    buffer: true,\n    bufferSize: 500,\n    bufferUnit: 'kilometers',\n    bufferSteps: 64,\n}\n*/\n\nexport default (draw) =>\n    new extendDrawBar({\n        draw,\n    });\n","import React, { useRef, useEffect } from 'react';\nimport mapboxGl from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport additionalTools from 'mapbox-gl-draw-additional-tools';\nimport './App.css';\n\nlet map;\nlet draw;\n\nfunction App() {\n    if (mapboxGl.getRTLTextPluginStatus() === 'unavailable')\n        mapboxGl.setRTLTextPlugin(\n            'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\n            (err) => {\n                err && console.error(err);\n            },\n            true\n        );\n    let mapRef = useRef(null);\n\n    useEffect(() => {\n        map = new mapboxGl.Map({\n            container: mapRef.current || '',\n            style: `https://map.ir/vector/styles/main/mapir-xyz-light-style.json`,\n            center: [51.3857, 35.6102],\n            zoom: 10,\n            pitch: 0,\n            interactive: true,\n            hash: true,\n            attributionControl: true,\n            customAttribution: '© Map © Openstreetmap',\n            transformRequest: (url) => {\n                return {\n                    url: url,\n                    headers: {\n                        'x-api-key':\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRiZWU0YWU4OTk4OTA3MmQ3OTFmMjQ4ZDE5N2VhZTgwZWU2NTUyYjhlYjczOWI2NDdlY2YyYzIzNWRiYThiMzIzOTM5MDkzZDM0NTY2MmU3In0.eyJhdWQiOiI5NDMyIiwianRpIjoiZGJlZTRhZTg5OTg5MDcyZDc5MWYyNDhkMTk3ZWFlODBlZTY1NTJiOGViNzM5YjY0N2VjZjJjMjM1ZGJhOGIzMjM5MzkwOTNkMzQ1NjYyZTciLCJpYXQiOjE1OTA4MjU0NzIsIm5iZiI6MTU5MDgyNTQ3MiwiZXhwIjoxNTkzNDE3NDcyLCJzdWIiOiIiLCJzY29wZXMiOlsiYmFzaWMiXX0.M_z4xJlJRuYrh8RFe9UrW89Y_XBzpPth4yk3hlT-goBm8o3x8DGCrSqgskFfmJTUD2wC2qSoVZzQKB67sm-swtD5fkxZO7C0lBCMAU92IYZwCdYehIOtZbP5L1Lfg3C6pxd0r7gQOdzcAZj9TStnKBQPK3jSvzkiHIQhb6I0sViOS_8JceSNs9ZlVelQ3gs77xM2ksWDM6vmqIndzsS-5hUd-9qdRDTLHnhdbS4_UBwNDza47Iqd5vZkBgmQ_oDZ7dVyBuMHiQFg28V6zhtsf3fijP0UhePCj4GM89g3tzYBOmuapVBobbX395FWpnNC3bYg7zDaVHcllSUYDjGc1A', //dev api key\n                        'Mapir-SDK': 'reactjs',\n                    },\n                };\n            },\n        });\n        draw = new MapboxDraw({\n            modes: {\n                ...MapboxDraw.modes,\n            },\n            bufferSize: 0.5, // Default is 500\n            bufferUnit: 'kilometers', //Default is kilometers. It can be miles, degrees or kilometers\n            bufferSteps: 64, // Default is 64\n            userProperties: true,\n        });\n\n        map.once('load', () => {\n            map.resize();\n            map.addControl(draw, 'top-right');\n            map.addControl(additionalTools(draw), 'top-right');\n            draw.set({\n                type: 'FeatureCollection',\n                features: [\n                    {\n                        type: 'Feature',\n                        properties: {},\n                        id: 'example-id',\n                        geometry: {\n                            type: 'Polygon',\n                            coordinates: [\n                                [\n                                    [51.41742415918904, 35.73019558439101],\n                                    [51.31319413385742, 35.702773908694724],\n                                    [51.378997493472525, 35.665562843119986],\n                                    [51.45008537540798, 35.67776544979942],\n                                    [51.46619566741822, 35.70822028156377],\n                                    [51.41742415918904, 35.73019558439101],\n                                ],\n                            ],\n                        },\n                    },\n                ],\n            });\n        });\n    }, []);\n\n    return (\n        <div className=\"map-wrapper\">\n            <div id=\"map\" ref={mapRef} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}