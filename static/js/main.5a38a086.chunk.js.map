{"version":3,"sources":["../../src/index.js","App.js","reportWebVitals.js","index.js"],"names":["require","map","draw","measurement","length","area","addToolStyle","defaultStyle","id","type","filter","layout","paint","extendDrawBar","opt","this","onRemoveOrig","onRemove","options","union","copy","cut","buffer","centroid","initialOptions","buttons","name","callback","centroidPolygons","title","classes","classPrefix","toPoints","unionPolygons","bufferFeature","copyFeature","cutFeature","lengthOfFeature","areaOfPolygon","_container","document","createElement","className","elContainer","button","toLowerCase","forEach","b","addButton","removeButton","elButton","setAttribute","Array","c","classList","add","addEventListener","bind","appendChild","removeEventListener","action","remove","selectedFeatures","getSelected","features","ids","centroids","main","geometry","Centroid","Math","floor","random","push","fireCreateCentroid","changeMode","featureIds","vertcies","includes","vertex","Kinks","fireCreateVertcies","unionPoly","Union","err","Error","i","delete","join","fireCreateUnion","bufferOptions","units","bufferUnits","steps","bufferSteps","buffers","buffered","Buffer","bufferSize","fireCreateBuffer","translated","translatedPoly","transformTranslate","fireUpdateCopy","cuts","cutPoly","fireUpdateCut","idx","Length","lengthUnits","value","showLength","setFeatureProperty","parseFloat","toFixed","fireUpdateMeasurement","Area","showArea","newF","fire","events","CREATE","UPDATE","App","mapboxGl","getRTLTextPluginStatus","setRTLTextPlugin","console","error","mapRef","useRef","useState","addTool","setAddTool","useEffect","Map","container","current","style","center","zoom","pitch","interactive","hash","attributionControl","customAttribution","transformRequest","url","headers","MapboxDraw","modes","styles","bufferUnit","userProperties","once","resize","addControl","additionalTools","set","properties","coordinates","on","e","log","querySelector","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a38a086.chunk.js","sourcesContent":["import Union from '@turf/union';\nimport Buffer from '@turf/buffer';\nimport Length from '@turf/length';\nimport Area from '@turf/area';\nimport Centroid from '@turf/centroid';\nimport Kinks from '@turf/kinks';\nimport transformTranslate from '@turf/transform-translate';\nimport defaultStyle from '@mapbox/mapbox-gl-draw/src/lib/theme';\nimport { events } from \"@mapbox/mapbox-gl-draw/src/constants\";\n\nrequire('./index.css');\n\nlet measurement = {\n    length: [],\n    area: [],\n};\n\nconst addToolStyle = [\n    ...defaultStyle,\n    {\n        id: 'gl-draw-line-active-length',\n        type: 'symbol',\n        filter: ['all', ['==', '$type', 'LineString'], ['==', 'active', 'true'], ['==', 'user_has_length', 'true']],\n        layout: {\n            'symbol-placement': 'line-center',\n            'text-rotation-alignment': 'map',\n            'text-pitch-alignment': 'viewport',\n            'text-max-angle': 30,\n            'text-max-width': 300,\n            'text-field': '{user_length} {user_length_unit}',\n            'text-font': ['IranSans-Noto'],\n            'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 10, 12, 16, 16],\n            'text-allow-overlap': false,\n        },\n        paint: {\n            'text-opacity': ['interpolate', ['linear'], ['zoom'], 8, 1],\n            'text-color': '#000',\n            'text-halo-color': ['interpolate', ['linear'], ['zoom'], 2, '#ffffff', 3, '#ffffff'],\n            'text-halo-width': 0.3,\n            'text-halo-blur': 1,\n        },\n    },\n    {\n        id: 'gl-draw-polygon-active-length',\n        type: 'symbol',\n        filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'true'], ['==', 'user_has_length', 'true']],\n        layout: {\n            'symbol-placement': 'line-center',\n            'text-rotation-alignment': 'map',\n            'text-pitch-alignment': 'viewport',\n            'text-max-angle': 30,\n            'text-max-width': 300,\n            'text-field': '{user_length} {user_length_unit}',\n            'text-font': ['IranSans-Noto'],\n            'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 10, 12, 16, 16],\n            'text-allow-overlap': false,\n        },\n        paint: {\n            'text-opacity': ['interpolate', ['linear'], ['zoom'], 8, 1],\n            'text-color': '#000',\n            'text-halo-color': ['interpolate', ['linear'], ['zoom'], 2, '#ffffff', 3, '#ffffff'],\n            'text-halo-width': 0.3,\n            'text-halo-blur': 1,\n        },\n    },\n    {\n        id: 'gl-draw-polygon-active-area',\n        type: 'symbol',\n        filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'true'], ['==', 'user_has_area', 'true']],\n        layout: {\n            'symbol-placement': 'line',\n            'text-rotation-alignment': 'map',\n            'text-pitch-alignment': 'viewport',\n            'text-max-angle': 30,\n            'text-max-width': 300,\n            'text-field': '{user_area} meters^2',\n            'text-font': ['IranSans-Noto'],\n            'text-size': ['interpolate', ['linear'], ['zoom'], 8, 8, 10, 12, 16, 16],\n            'text-allow-overlap': false,\n        },\n        paint: {\n            'text-opacity': ['interpolate', ['linear'], ['zoom'], 8, 1],\n            'text-color': '#000',\n            'text-halo-color': ['interpolate', ['linear'], ['zoom'], 2, '#ffffff', 3, '#ffffff'],\n            'text-halo-width': 0.3,\n            'text-halo-blur': 1,\n        },\n    },\n];\nclass extendDrawBar {\n    constructor(opt) {\n        this.draw = opt.draw;\n        this.onRemoveOrig = opt.draw.onRemove;\n        const { union, copy, cut, buffer, length, area, centroid } = this.draw.options;\n        this.initialOptions = { union, copy, cut, buffer, length, area, centroid };\n\n        this.buttons = [\n            {\n                name: 'Centroid',\n                callback: this.centroidPolygons,\n                title: `Centroid tool`,\n                classes: ['mapbox-gl-draw_centroid', opt.classPrefix ? `${opt.classPrefix}-centroid` : null],\n            },\n            {\n                name: 'PolygonToPoints',\n                callback: this.toPoints,\n                title: `PolygonToPoints tool`,\n                classes: ['mapbox-gl-draw_poly_to_points', opt.classPrefix ? `${opt.classPrefix}-poly_to_points` : null],\n            },\n            {\n                name: 'LineToPoints',\n                callback: this.toPoints,\n                title: `LineToPoints tool`,\n                classes: ['mapbox-gl-draw_line_to_points', opt.classPrefix ? `${opt.classPrefix}-line_to_points` : null],\n            },\n            {\n                name: 'Union',\n                callback: this.unionPolygons,\n                title: `Union tool`,\n                classes: ['mapbox-gl-draw_union', opt.classPrefix ? `${opt.classPrefix}-union` : null],\n            },\n            {\n                name: 'Buffer',\n                callback: this.bufferFeature,\n                title: `Buffer tool`,\n                classes: ['mapbox-gl-draw_buffer', opt.classPrefix ? `${opt.classPrefix}-buffer` : null],\n            },\n            {\n                name: 'Copy',\n                callback: this.copyFeature,\n                title: `Copy tool`,\n                classes: ['mapbox-gl-draw_copy', opt.classPrefix ? `${opt.classPrefix}-copy` : null],\n            },\n            {\n                name: 'Cut',\n                callback: this.cutFeature,\n                title: `Cut tool`,\n                classes: ['mapbox-gl-draw_cut', opt.classPrefix ? `${opt.classPrefix}-cut` : null],\n            },\n            {\n                name: 'Length',\n                callback: this.lengthOfFeature,\n                title: `Length tool`,\n                classes: ['mapbox-gl-draw_length', opt.classPrefix ? `${opt.classPrefix}-length` : null],\n            },\n            {\n                name: 'Area',\n                callback: this.areaOfPolygon,\n                title: `Area tool`,\n                classes: ['mapbox-gl-draw_area', opt.classPrefix ? `${opt.classPrefix}-area` : null],\n            },\n        ];\n    }\n\n    onAdd(map) {\n        this.map = map;\n        this._container = document.createElement('div');\n        this._container.className = 'mapboxgl-ctrl-group mapboxgl-ctrl';\n        this.elContainer = this._container;\n        this.buttons\n            .filter((button) => this.initialOptions[button.name.toLowerCase()] !== false)\n            .forEach((b) => {\n                this.addButton(b);\n            });\n        return this._container;\n    }\n    onRemove(map) {\n        this.buttons\n            .filter((button) => this.initialOptions[button.name.toLowerCase()] !== false)\n            .forEach((b) => {\n                this.removeButton(b);\n            });\n        this.onRemoveOrig(map);\n    }\n\n    addButton(opt) {\n        var elButton = document.createElement('button');\n        elButton.className = 'mapbox-gl-draw_ctrl-draw-btn';\n        elButton.setAttribute('title', opt.title);\n        if (opt.classes instanceof Array) {\n            opt.classes.forEach((c) => {\n                elButton.classList.add(c);\n            });\n        }\n        elButton.addEventListener('click', opt.callback.bind(this));\n        this.elContainer.appendChild(elButton);\n        opt.elButton = elButton;\n    }\n\n    removeButton(opt) {\n        opt.elButton.removeEventListener('click', opt.action);\n        opt.elButton.remove();\n    }\n\n    centroidPolygons() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        let centroids = [];\n        selectedFeatures.forEach((main) => {\n            if(main.geometry.type !== 'Polygon') return\n            let centroid = Centroid(main.geometry);\n            centroid.id = `${main.id}_centroid_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(centroid.id)\n            centroids.push(centroid)\n        })\n        this.fireCreateCentroid(centroids)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    toPoints() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        let vertcies = [];\n        selectedFeatures.forEach((main) => {\n            if(['Point', 'MultiPoint'].includes(main.geometry.type)) return\n            let vertex = Kinks(main.geometry);\n            vertex.id = `${main.id}_vertex_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(vertex.id)\n            vertcies.push(vertex)\n        })\n        this.fireCreateVertcies(vertcies)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    unionPolygons() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let unionPoly;\n        try {\n            unionPoly = Union(...this.draw.getSelected().features);\n        } catch (err) {\n            throw new Error(err);\n        }\n        if (unionPoly.geometry.type === 'GeometryCollection')\n            throw new Error('Selected Features must have the same types!');\n        let ids = selectedFeatures.map((i) => i.id);\n        this.draw.delete(ids);\n        unionPoly.id = ids.join('-');\n        this.draw.add(unionPoly);\n        this.fireCreateUnion(unionPoly)\n        this.draw.changeMode('simple_select', { featureIds: [unionPoly.id] });\n    }\n\n    bufferFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        const bufferOptions = {};\n        bufferOptions.units = this.draw.options.bufferUnits || 'kilometers';\n        bufferOptions.steps = this.draw.options.bufferSteps || '64';\n        let ids = [];\n        let buffers = [];\n        selectedFeatures.forEach((main) => {\n            let buffered = Buffer(main, this.draw.options.bufferSize || 0.5, bufferOptions);\n            buffered.id = `${main.id}_buffer_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(buffered.id);\n            buffers.push(buffered)\n            // this.draw.add(buffered);\n        });\n        this.fireCreateBuffer(buffers)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    copyFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        let translated = [];\n        selectedFeatures.forEach((main) => {\n            var translatedPoly = transformTranslate(main, 2, 35);\n            translatedPoly.id = `${main.id}_copy_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(translatedPoly.id);\n            translated.push(translatedPoly);\n            // this.draw.add(translatedPoly);\n        });\n        this.fireUpdateCopy(translated)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    cutFeature() {\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        let ids = [];\n        let cuts = [];\n        selectedFeatures.forEach((main) => {\n            var cutPoly = transformTranslate(main, 2, 35);\n            cutPoly.id = `${main.id}_cut_${Math.floor(Math.random() * Math.floor(1000))}`;\n            ids.push(cutPoly.id);\n            cuts.push(cutPoly);\n            // this.draw.add(translatedPoly);\n        });\n        this.fireUpdateCut(cuts)\n        this.draw.changeMode('simple_select', { featureIds: ids });\n    }\n\n    lengthOfFeature() {\n        measurement.length = [];\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        selectedFeatures.forEach((main, idx) => {\n            let length = Length(main, { units: this.draw.options.lengthUnits || 'kilometers' });\n            measurement.length.push({ id: main.id, value: length });\n            (this.draw.options.showLength || true) &&\n                this.draw.setFeatureProperty(main.id, 'has_length', 'true') &&\n                this.draw.setFeatureProperty(main.id, 'length', parseFloat(length).toFixed(4)) &&\n                this.draw.setFeatureProperty(main.id, 'length_unit', this.draw.options.lengthUnits || 'kilometers');\n        });\n        this.fireUpdateMeasurement(measurement.length, 'length')\n    }\n    areaOfPolygon() {\n        measurement.area = [];\n        const selectedFeatures = this.draw.getSelected().features;\n        if (!selectedFeatures.length) return;\n        selectedFeatures.forEach((main, idx) => {\n            let area = Area(main);\n            measurement.area.push({ id: main.id, value: area });\n            (this.draw.options.showArea || true) &&\n                this.draw.setFeatureProperty(main.id, 'has_area', 'true') &&\n                this.draw.setFeatureProperty(main.id, 'area', parseFloat(area).toFixed(4));\n        });\n        this.fireUpdateMeasurement(measurement.area, 'area'\n            )\n    }\n\n    fireCreateCentroid(newF) {\n        this.map.fire(events.CREATE, {\n          action: 'CentroidPolygon',\n          features: newF\n        });\n    }\n    fireCreateVertcies(newF) {\n        this.map.fire(events.CREATE, {\n          action: 'toPoints',\n          features: newF\n        });\n    }\n    fireCreateUnion(newF) {\n        this.map.fire(events.CREATE, {\n          action: 'UnionPolygon',\n          features: newF\n        });\n    }\n    fireCreateBuffer(newF) {\n        this.map.fire(events.CREATE, {\n          action: 'Buffer',\n          features: newF\n        });\n    }\n    fireUpdateCopy(newF) {\n        this.map.fire(events.UPDATE, {\n          action: 'Copy',\n          features: newF\n        });\n    }\n    fireUpdateCut(newF) {\n        this.map.fire(events.UPDATE, {\n          action: 'Cut',\n          features: newF\n        });\n    }\n    fireUpdateMeasurement(newF, type) {\n        this.map.fire(events.UPDATE, {\n          action: 'Measurement-' + type,\n          features: newF\n        });\n    }\n}\n\n/*\noptions\n------\n{\n    union: true,\n    copy: true,\n    buffer: true,\n    length: true,\n    area: true,\n    bufferSize: 500,\n    bufferUnit: 'kilometers',\n    bufferSteps: 64,\n    lengthUnit: 'kilometers',\n    showLength: true,\n    showArea: true\n}\n*/\n\nconst additionalTools = (draw, classPrefix) =>\n    new extendDrawBar({\n        draw,\n        classPrefix,\n    });\n\nexport { additionalTools, measurement, addToolStyle };\n","import React, { useRef, useEffect, useState } from 'react';\nimport mapboxGl from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport { additionalTools, measurement, addToolStyle } from 'mapbox-gl-draw-additional-tools';\nimport './App.css';\n\nlet map;\nlet draw;\n\nfunction App() {\n    if (mapboxGl.getRTLTextPluginStatus() === 'unavailable')\n        mapboxGl.setRTLTextPlugin(\n            'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\n            (err) => {\n                err && console.error(err);\n            },\n            true\n        );\n    let mapRef = useRef(null);\n    const [addTool, setAddTool] = useState();\n\n    useEffect(() => {\n        map = new mapboxGl.Map({\n            container: mapRef.current || '',\n            style: `https://map.ir/vector/styles/main/mapir-xyz-light-style.json`,\n            center: [51.3857, 35.6102],\n            zoom: 10,\n            pitch: 0,\n            interactive: true,\n            hash: true,\n            attributionControl: true,\n            customAttribution: '© Map © Openstreetmap',\n            transformRequest: (url) => {\n                return {\n                    url: url,\n                    headers: {\n                        'x-api-key':\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRiZWU0YWU4OTk4OTA3MmQ3OTFmMjQ4ZDE5N2VhZTgwZWU2NTUyYjhlYjczOWI2NDdlY2YyYzIzNWRiYThiMzIzOTM5MDkzZDM0NTY2MmU3In0.eyJhdWQiOiI5NDMyIiwianRpIjoiZGJlZTRhZTg5OTg5MDcyZDc5MWYyNDhkMTk3ZWFlODBlZTY1NTJiOGViNzM5YjY0N2VjZjJjMjM1ZGJhOGIzMjM5MzkwOTNkMzQ1NjYyZTciLCJpYXQiOjE1OTA4MjU0NzIsIm5iZiI6MTU5MDgyNTQ3MiwiZXhwIjoxNTkzNDE3NDcyLCJzdWIiOiIiLCJzY29wZXMiOlsiYmFzaWMiXX0.M_z4xJlJRuYrh8RFe9UrW89Y_XBzpPth4yk3hlT-goBm8o3x8DGCrSqgskFfmJTUD2wC2qSoVZzQKB67sm-swtD5fkxZO7C0lBCMAU92IYZwCdYehIOtZbP5L1Lfg3C6pxd0r7gQOdzcAZj9TStnKBQPK3jSvzkiHIQhb6I0sViOS_8JceSNs9ZlVelQ3gs77xM2ksWDM6vmqIndzsS-5hUd-9qdRDTLHnhdbS4_UBwNDza47Iqd5vZkBgmQ_oDZ7dVyBuMHiQFg28V6zhtsf3fijP0UhePCj4GM89g3tzYBOmuapVBobbX395FWpnNC3bYg7zDaVHcllSUYDjGc1A', //dev api key\n                        'Mapir-SDK': 'reactjs',\n                    },\n                };\n            },\n        });\n        draw = new MapboxDraw({\n            modes: {\n                ...MapboxDraw.modes,\n            },\n            styles: addToolStyle,\n            bufferSize: 0.5, // Default is 500\n            bufferUnit: 'kilometers', //Default is kilometers. It can be miles, degrees or kilometers\n            bufferSteps: 64, // Default is 64\n            userProperties: true,\n        });\n\n        map.once('load', () => {\n            map.resize();\n            map.addControl(draw, 'top-right');\n            setAddTool(map.addControl(additionalTools(draw, 'custom-prefix'), 'top-right'));\n            draw.set({\n                type: 'FeatureCollection',\n                features: [\n                    {\n                        type: 'Feature',\n                        properties: {},\n                        id: 'example-id',\n                        geometry: {\n                            type: 'Polygon',\n                            coordinates: [\n                                [\n                                    [51.41742415918904, 35.73019558439101],\n                                    [51.31319413385742, 35.702773908694724],\n                                    [51.378997493472525, 35.665562843119986],\n                                    [51.45008537540798, 35.67776544979942],\n                                    [51.46619566741822, 35.70822028156377],\n                                    [51.41742415918904, 35.73019558439101],\n                                ],\n                            ],\n                        },\n                    },\n                ],\n            });\n            map.on('draw.create', function (e) {console.log(e)})\n            map.on('draw.update', function (e) {console.log(e)})\n        });\n    }, []);\n\n    useEffect(() => {\n        addTool &&\n            document.querySelector('.mapbox-gl-draw_length')?.addEventListener('click', () => {\n                console.log(measurement.length);\n            });\n        addTool &&\n            document.querySelector('.mapbox-gl-draw_area')?.addEventListener('click', () => {\n                console.log(measurement.area);\n            });\n    }, [addTool]);\n\n    return (\n        <div className=\"map-wrapper\">\n            <div id=\"map\" ref={mapRef} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}